<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults">
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">8081</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="mIndex" elementType="Argument">
            <stringProp name="Argument.name">mIndex</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fIndex" elementType="Argument">
            <stringProp name="Argument.name">fIndex</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">48</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/rxflow_backend_war_exploded/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;codewithdeba142&quot;,&quot;password&quot;:&quot;Deba123&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Connection" elementType="Header">
                <stringProp name="Header.name">Connection</stringProp>
                <stringProp name="Header.value">keep-alive</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">C_Token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NA</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Doctor" enabled="true">
          <stringProp name="HTTPSampler.path">/rxflow_backend_war_exploded/doctors</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="${imageFilePath}" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">image/jpeg</stringProp>
                <stringProp name="File.path">${imageFilePath}</stringProp>
                <stringProp name="File.paramname">image</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="doctorData" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${doctorData}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">doctorData</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${C_Token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">multipart/form-data</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <com.di.jmeter.config.ExtendedCsvDataSetConfig guiclass="com.di.jmeter.config.gui.ExtendedCsvDataSetConfigGui" testclass="com.di.jmeter.config.ExtendedCsvDataSetConfig" testname="Extended CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:\Users\deban\OneDrive\Documents\Doctor Appointment App\doctors_data_extended.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">image,username,password,name,email,address1,address2,speciality,degree,experience,about,fees,phone,dob,gender</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <stringProp name="selectRow">Sequential</stringProp>
            <stringProp name="updateValue">Each Iteration</stringProp>
            <stringProp name="ooValue">Abort Thread</stringProp>
            <stringProp name="shareMode">All threads</stringProp>
            <boolProp name="autoAllocate">true</boolProp>
            <boolProp name="allocate">false</boolProp>
            <stringProp name="blockSize"></stringProp>
          </com.di.jmeter.config.ExtendedCsvDataSetConfig>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">import java.nio.file.*
import org.apache.commons.io.FileUtils
import java.net.URL

String imageUrl = &quot;C:/Users/deban/OneDrive/Documents/Doctor Appointment App/doctor images/&quot;

def username = vars.get(&quot;username&quot;)
def password = vars.get(&quot;password&quot;)
def name = vars.get(&quot;name&quot;)
def gender = vars.get(&quot;gender&quot;)
def phone = vars.get(&quot;phone&quot;)
def dob = vars.get(&quot;dob&quot;)
def address1 = vars.get(&quot;address1&quot;)
def address2 = vars.get(&quot;address1&quot;)
def speciality = vars.get(&quot;speciality&quot;)
def degree = vars.get(&quot;degree&quot;)
def experience = vars.get(&quot;experience&quot;)
def about = vars.get(&quot;about&quot;)
def fees = vars.get(&quot;fees&quot;) as int


String outputFilePath = imageUrl + &quot;&quot;

if(gender == &quot;female&quot;){
	if (vars.get(&quot;fIndex&quot;) == null) {
	    vars.put(&quot;fIndex&quot;, &quot;1&quot;)
	} else {
	    int current = vars.get(&quot;fIndex&quot;) as int
	    vars.put(&quot;fIndex&quot;, (current + 1).toString())
	}
}


if(gender == &quot;male&quot;){
	if (vars.get(&quot;mIndex&quot;) == null) {
	    vars.put(&quot;mIndex&quot;, &quot;1&quot;)
	} else {
	    int current = vars.get(&quot;mIndex&quot;) as int
	    vars.put(&quot;mIndex&quot;, (current + 1).toString())
	}
}

if(vars.get(&quot;gender&quot;) == &quot;male&quot;){
	outputFilePath = imageUrl + &quot;male&quot;+ vars.get(&quot;mIndex&quot;) + &quot;.png&quot;
}else{
	outputFilePath = imageUrl + &quot;female&quot;+ vars.get(&quot;fIndex&quot;) + &quot;.png&quot;
}


File outputFile = new File(outputFilePath)

vars.put(&quot;imageFilePath&quot;, outputFile.getAbsolutePath())

log.info(&quot;Downloaded image to: &quot; + outputFile.getAbsolutePath())

var doctorData = &quot;{\&quot;user\&quot; : {\&quot;username\&quot;: \&quot;&quot;+ username + &quot;\&quot; , \&quot;password\&quot; : \&quot;&quot;+ password + &quot;\&quot; , \&quot;name\&quot; : \&quot;&quot;+ name + &quot;\&quot; , \&quot;gender\&quot; : \&quot;&quot;+ gender + &quot;\&quot; , \&quot;phone\&quot; : \&quot;&quot;+ phone + &quot;\&quot; , \&quot;dob\&quot; : \&quot;&quot;+ dob + &quot;\&quot; , \&quot;address\&quot;: { \&quot;line1\&quot;: \&quot;&quot;+ address1 + &quot;\&quot;, \&quot;line2\&quot;: \&quot;&quot;+ address2 + &quot;\&quot;}} , \&quot;speciality\&quot;: \&quot;&quot;+ speciality + &quot;\&quot; , \&quot;degree\&quot; : \&quot;&quot;+ degree + &quot;\&quot; , \&quot;experience\&quot; : \&quot;&quot;+ experience + &quot;\&quot; ,\&quot;about\&quot; : \&quot;&quot;+ about + &quot;\&quot; , \&quot;available\&quot; : true , \&quot;fees\&quot; : &quot;+ fees + &quot;}&quot;

vars.put(&quot;doctorData&quot;, doctorData)</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
